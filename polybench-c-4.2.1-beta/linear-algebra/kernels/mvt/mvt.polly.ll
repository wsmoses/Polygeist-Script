; ModuleID = 'mvt.c'
source_filename = "mvt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"==BEGIN DUMP_ARRAYS==\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"begin dump: %s\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"x1\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"\0Aend   dump: %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"x2\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"==END   DUMP_ARRAYS==\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #0 {
entry.split:
  %call.i = tail call noalias dereferenceable_or_null(128000000) i8* @malloc(i64 128000000) #6
  %call.i37 = tail call noalias dereferenceable_or_null(32000) i8* @malloc(i64 32000) #6
  %call.i38 = tail call noalias dereferenceable_or_null(32000) i8* @malloc(i64 32000) #6
  %call.i39 = tail call noalias dereferenceable_or_null(32000) i8* @malloc(i64 32000) #6
  %call.i40 = tail call noalias dereferenceable_or_null(32000) i8* @malloc(i64 32000) #6
  %arraydecay = bitcast i8* %call.i37 to double*
  %arraydecay5 = bitcast i8* %call.i38 to double*
  %arraydecay6 = bitcast i8* %call.i39 to double*
  %arraydecay7 = bitcast i8* %call.i40 to double*
  %arraydecay8 = bitcast i8* %call.i to [4000 x double]*
  br label %for.body.i

for.cond.loopexit.i:                              ; preds = %for.body25.i
  %add.i = add nuw nsw i32 %i.06.i, 1
  %exitcond10.not.i = icmp eq i64 %indvars.iv.next9.i, 4000
  br i1 %exitcond10.not.i, label %polly.loop_preheader, label %for.body.i, !llvm.loop !2

for.body.i:                                       ; preds = %for.cond.loopexit.i, %entry.split
  %indvars.iv8.i = phi i64 [ 0, %entry.split ], [ %indvars.iv.next9.i, %for.cond.loopexit.i ]
  %i.06.i = phi i32 [ 0, %entry.split ], [ %add.i, %for.cond.loopexit.i ]
  %rem.lhs.trunc.i = trunc i32 %i.06.i to i16
  %rem1.i = urem i16 %rem.lhs.trunc.i, 4000
  %conv.i = uitofp i16 %rem1.i to double
  %div.i = fdiv double %conv.i, 4.000000e+03
  %arrayidx.i = getelementptr inbounds double, double* %arraydecay, i64 %indvars.iv8.i
  store double %div.i, double* %arrayidx.i, align 8, !tbaa !4
  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1
  %0 = trunc i64 %indvars.iv.next9.i to i16
  %rem22.i = urem i16 %0, 4000
  %conv3.i = uitofp i16 %rem22.i to double
  %div5.i = fdiv double %conv3.i, 4.000000e+03
  %arrayidx7.i = getelementptr inbounds double, double* %arraydecay5, i64 %indvars.iv8.i
  store double %div5.i, double* %arrayidx7.i, align 8, !tbaa !4
  %rem9.lhs.trunc.i = add i16 %rem.lhs.trunc.i, 3
  %rem93.i = urem i16 %rem9.lhs.trunc.i, 4000
  %conv10.i = uitofp i16 %rem93.i to double
  %div12.i = fdiv double %conv10.i, 4.000000e+03
  %arrayidx14.i = getelementptr inbounds double, double* %arraydecay6, i64 %indvars.iv8.i
  store double %div12.i, double* %arrayidx14.i, align 8, !tbaa !4
  %rem16.lhs.trunc.i = add i16 %rem.lhs.trunc.i, 4
  %rem164.i = urem i16 %rem16.lhs.trunc.i, 4000
  %conv17.i = uitofp i16 %rem164.i to double
  %div19.i = fdiv double %conv17.i, 4.000000e+03
  %arrayidx21.i = getelementptr inbounds double, double* %arraydecay7, i64 %indvars.iv8.i
  store double %div19.i, double* %arrayidx21.i, align 8, !tbaa !4
  br label %for.body25.i

for.body25.i:                                     ; preds = %for.body25.i, %for.body.i
  %indvars.iv.i = phi i64 [ 0, %for.body.i ], [ %indvars.iv.next.i, %for.body25.i ]
  %1 = mul nuw nsw i64 %indvars.iv.i, %indvars.iv8.i
  %2 = trunc i64 %1 to i32
  %rem26.i = urem i32 %2, 4000
  %conv27.i = sitofp i32 %rem26.i to double
  %div29.i = fdiv double %conv27.i, 4.000000e+03
  %arrayidx33.i = getelementptr inbounds [4000 x double], [4000 x double]* %arraydecay8, i64 %indvars.iv8.i, i64 %indvars.iv.i
  store double %div29.i, double* %arrayidx33.i, align 8, !tbaa !4
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, 4000
  br i1 %exitcond.not.i, label %for.cond.loopexit.i, label %for.body25.i, !llvm.loop !8

kernel_mvt.exit:                                  ; preds = %polly.loop_exit88
  tail call void (...) @polybench_timer_stop() #6
  tail call void (...) @polybench_timer_print() #6
  %cmp = icmp sgt i32 %argc, 42
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %kernel_mvt.exit
  %3 = load i8*, i8** %argv, align 8, !tbaa !9
  %strcmpload = load i8, i8* %3, align 1
  %tobool.not = icmp eq i8 %strcmpload, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %4) #7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %call1.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %for.body.i52

for.body.i52:                                     ; preds = %if.end.i, %if.then
  %indvars.iv.i50 = phi i64 [ 0, %if.then ], [ %indvars.iv.next.i54, %if.end.i ]
  %i.04.i = phi i32 [ 0, %if.then ], [ %inc.i, %if.end.i ]
  %rem.lhs.trunc.i51 = trunc i32 %i.04.i to i16
  %rem2.i = urem i16 %rem.lhs.trunc.i51, 20
  %cmp2.i = icmp eq i16 %rem2.i, 0
  br i1 %cmp2.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %for.body.i52
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %fputc1.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %7) #6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i52
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %arrayidx.i53 = getelementptr inbounds double, double* %arraydecay, i64 %indvars.iv.i50
  %9 = load double, double* %arrayidx.i53, align 8, !tbaa !4
  %call4.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), double %9) #7
  %indvars.iv.next.i54 = add nuw nsw i64 %indvars.iv.i50, 1
  %inc.i = add nuw nsw i32 %i.04.i, 1
  %exitcond.not.i55 = icmp eq i64 %indvars.iv.next.i54, 4000
  br i1 %exitcond.not.i55, label %for.end.i, label %for.body.i52, !llvm.loop !11

for.end.i:                                        ; preds = %if.end.i
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %call5.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #7
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %call6.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %for.body9.i

for.body9.i:                                      ; preds = %if.end14.i, %for.end.i
  %indvars.iv6.i = phi i64 [ 0, %for.end.i ], [ %indvars.iv.next7.i, %if.end14.i ]
  %i.15.i = phi i32 [ 0, %for.end.i ], [ %inc19.i, %if.end14.i ]
  %rem10.lhs.trunc.i = trunc i32 %i.15.i to i16
  %rem103.i = urem i16 %rem10.lhs.trunc.i, 20
  %cmp11.i = icmp eq i16 %rem103.i, 0
  br i1 %cmp11.i, label %if.then12.i, label %if.end14.i

if.then12.i:                                      ; preds = %for.body9.i
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %fputc.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %12) #6
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then12.i, %for.body9.i
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %arrayidx16.i = getelementptr inbounds double, double* %arraydecay5, i64 %indvars.iv6.i
  %14 = load double, double* %arrayidx16.i, align 8, !tbaa !4
  %call17.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), double %14) #7
  %indvars.iv.next7.i = add nuw nsw i64 %indvars.iv6.i, 1
  %inc19.i = add nuw nsw i32 %i.15.i, 1
  %exitcond8.not.i = icmp eq i64 %indvars.iv.next7.i, 4000
  br i1 %exitcond8.not.i, label %print_array.exit, label %for.body9.i, !llvm.loop !12

print_array.exit:                                 ; preds = %if.end14.i
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %call21.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #7
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !9
  %17 = tail call i64 @fwrite(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %16) #7
  br label %if.end

if.end:                                           ; preds = %print_array.exit, %land.lhs.true, %kernel_mvt.exit
  tail call void @free(i8* %call.i) #6
  tail call void @free(i8* %call.i37) #6
  tail call void @free(i8* nonnull %call.i38) #6
  tail call void @free(i8* %call.i39) #6
  tail call void @free(i8* %call.i40) #6
  ret i32 0

polly.loop_exit58:                                ; preds = %polly.loop_exit64
  %polly.indvar_next = add nuw nsw i64 %polly.indvar, 1
  %exitcond115.not = icmp eq i64 %polly.indvar_next, 125
  br i1 %exitcond115.not, label %polly.loop_preheader87, label %polly.loop_preheader57

polly.loop_preheader:                             ; preds = %for.cond.loopexit.i
  tail call void (...) @polybench_timer_start() #6
  br label %polly.loop_preheader57

polly.loop_exit64:                                ; preds = %polly.loop_preheader69
  %polly.indvar_next60 = add nuw nsw i64 %polly.indvar59, 1
  %exitcond114.not = icmp eq i64 %polly.indvar_next60, 125
  br i1 %exitcond114.not, label %polly.loop_exit58, label %polly.loop_preheader63

polly.loop_preheader57:                           ; preds = %polly.loop_preheader, %polly.loop_exit58
  %polly.indvar = phi i64 [ 0, %polly.loop_preheader ], [ %polly.indvar_next, %polly.loop_exit58 ]
  %18 = shl nsw i64 %polly.indvar, 5
  br label %polly.loop_preheader63

polly.loop_preheader63:                           ; preds = %polly.loop_preheader57, %polly.loop_exit64
  %polly.indvar59 = phi i64 [ 0, %polly.loop_preheader57 ], [ %polly.indvar_next60, %polly.loop_exit64 ]
  %19 = shl i64 %polly.indvar59, 8
  %20 = shl i64 %polly.indvar59, 8
  %scevgep75 = getelementptr i8, i8* %call.i39, i64 %20
  %scevgep7576 = bitcast i8* %scevgep75 to double*
  %_p_scalar_77 = load double, double* %scevgep7576, align 8, !alias.scope !13, !noalias !15
  %21 = shl i64 %polly.indvar59, 8
  %22 = or i64 %21, 8
  %scevgep75.1 = getelementptr i8, i8* %call.i39, i64 %22
  %scevgep7576.1 = bitcast i8* %scevgep75.1 to double*
  %_p_scalar_77.1 = load double, double* %scevgep7576.1, align 8, !alias.scope !13, !noalias !15
  %23 = shl i64 %polly.indvar59, 8
  %24 = or i64 %23, 16
  %scevgep75.2 = getelementptr i8, i8* %call.i39, i64 %24
  %scevgep7576.2 = bitcast i8* %scevgep75.2 to double*
  %_p_scalar_77.2 = load double, double* %scevgep7576.2, align 8, !alias.scope !13, !noalias !15
  %25 = shl i64 %polly.indvar59, 8
  %26 = or i64 %25, 24
  %scevgep75.3 = getelementptr i8, i8* %call.i39, i64 %26
  %scevgep7576.3 = bitcast i8* %scevgep75.3 to double*
  %_p_scalar_77.3 = load double, double* %scevgep7576.3, align 8, !alias.scope !13, !noalias !15
  %27 = shl i64 %polly.indvar59, 8
  %28 = or i64 %27, 32
  %scevgep75.4 = getelementptr i8, i8* %call.i39, i64 %28
  %scevgep7576.4 = bitcast i8* %scevgep75.4 to double*
  %_p_scalar_77.4 = load double, double* %scevgep7576.4, align 8, !alias.scope !13, !noalias !15
  %29 = shl i64 %polly.indvar59, 8
  %30 = or i64 %29, 40
  %scevgep75.5 = getelementptr i8, i8* %call.i39, i64 %30
  %scevgep7576.5 = bitcast i8* %scevgep75.5 to double*
  %_p_scalar_77.5 = load double, double* %scevgep7576.5, align 8, !alias.scope !13, !noalias !15
  %31 = shl i64 %polly.indvar59, 8
  %32 = or i64 %31, 48
  %scevgep75.6 = getelementptr i8, i8* %call.i39, i64 %32
  %scevgep7576.6 = bitcast i8* %scevgep75.6 to double*
  %_p_scalar_77.6 = load double, double* %scevgep7576.6, align 8, !alias.scope !13, !noalias !15
  %33 = shl i64 %polly.indvar59, 8
  %34 = or i64 %33, 56
  %scevgep75.7 = getelementptr i8, i8* %call.i39, i64 %34
  %scevgep7576.7 = bitcast i8* %scevgep75.7 to double*
  %_p_scalar_77.7 = load double, double* %scevgep7576.7, align 8, !alias.scope !13, !noalias !15
  %35 = shl i64 %polly.indvar59, 8
  %36 = or i64 %35, 64
  %scevgep75.8 = getelementptr i8, i8* %call.i39, i64 %36
  %scevgep7576.8 = bitcast i8* %scevgep75.8 to double*
  %_p_scalar_77.8 = load double, double* %scevgep7576.8, align 8, !alias.scope !13, !noalias !15
  %37 = shl i64 %polly.indvar59, 8
  %38 = or i64 %37, 72
  %scevgep75.9 = getelementptr i8, i8* %call.i39, i64 %38
  %scevgep7576.9 = bitcast i8* %scevgep75.9 to double*
  %_p_scalar_77.9 = load double, double* %scevgep7576.9, align 8, !alias.scope !13, !noalias !15
  %39 = shl i64 %polly.indvar59, 8
  %40 = or i64 %39, 80
  %scevgep75.10 = getelementptr i8, i8* %call.i39, i64 %40
  %scevgep7576.10 = bitcast i8* %scevgep75.10 to double*
  %_p_scalar_77.10 = load double, double* %scevgep7576.10, align 8, !alias.scope !13, !noalias !15
  %41 = shl i64 %polly.indvar59, 8
  %42 = or i64 %41, 88
  %scevgep75.11 = getelementptr i8, i8* %call.i39, i64 %42
  %scevgep7576.11 = bitcast i8* %scevgep75.11 to double*
  %_p_scalar_77.11 = load double, double* %scevgep7576.11, align 8, !alias.scope !13, !noalias !15
  %43 = shl i64 %polly.indvar59, 8
  %44 = or i64 %43, 96
  %scevgep75.12 = getelementptr i8, i8* %call.i39, i64 %44
  %scevgep7576.12 = bitcast i8* %scevgep75.12 to double*
  %_p_scalar_77.12 = load double, double* %scevgep7576.12, align 8, !alias.scope !13, !noalias !15
  %45 = shl i64 %polly.indvar59, 8
  %46 = or i64 %45, 104
  %scevgep75.13 = getelementptr i8, i8* %call.i39, i64 %46
  %scevgep7576.13 = bitcast i8* %scevgep75.13 to double*
  %_p_scalar_77.13 = load double, double* %scevgep7576.13, align 8, !alias.scope !13, !noalias !15
  %47 = shl i64 %polly.indvar59, 8
  %48 = or i64 %47, 112
  %scevgep75.14 = getelementptr i8, i8* %call.i39, i64 %48
  %scevgep7576.14 = bitcast i8* %scevgep75.14 to double*
  %_p_scalar_77.14 = load double, double* %scevgep7576.14, align 8, !alias.scope !13, !noalias !15
  %49 = shl i64 %polly.indvar59, 8
  %50 = or i64 %49, 120
  %scevgep75.15 = getelementptr i8, i8* %call.i39, i64 %50
  %scevgep7576.15 = bitcast i8* %scevgep75.15 to double*
  %_p_scalar_77.15 = load double, double* %scevgep7576.15, align 8, !alias.scope !13, !noalias !15
  %51 = shl i64 %polly.indvar59, 8
  %52 = or i64 %51, 128
  %scevgep75.16 = getelementptr i8, i8* %call.i39, i64 %52
  %scevgep7576.16 = bitcast i8* %scevgep75.16 to double*
  %_p_scalar_77.16 = load double, double* %scevgep7576.16, align 8, !alias.scope !13, !noalias !15
  %53 = shl i64 %polly.indvar59, 8
  %54 = or i64 %53, 136
  %scevgep75.17 = getelementptr i8, i8* %call.i39, i64 %54
  %scevgep7576.17 = bitcast i8* %scevgep75.17 to double*
  %_p_scalar_77.17 = load double, double* %scevgep7576.17, align 8, !alias.scope !13, !noalias !15
  %55 = shl i64 %polly.indvar59, 8
  %56 = or i64 %55, 144
  %scevgep75.18 = getelementptr i8, i8* %call.i39, i64 %56
  %scevgep7576.18 = bitcast i8* %scevgep75.18 to double*
  %_p_scalar_77.18 = load double, double* %scevgep7576.18, align 8, !alias.scope !13, !noalias !15
  %57 = shl i64 %polly.indvar59, 8
  %58 = or i64 %57, 152
  %scevgep75.19 = getelementptr i8, i8* %call.i39, i64 %58
  %scevgep7576.19 = bitcast i8* %scevgep75.19 to double*
  %_p_scalar_77.19 = load double, double* %scevgep7576.19, align 8, !alias.scope !13, !noalias !15
  %59 = shl i64 %polly.indvar59, 8
  %60 = or i64 %59, 160
  %scevgep75.20 = getelementptr i8, i8* %call.i39, i64 %60
  %scevgep7576.20 = bitcast i8* %scevgep75.20 to double*
  %_p_scalar_77.20 = load double, double* %scevgep7576.20, align 8, !alias.scope !13, !noalias !15
  %61 = shl i64 %polly.indvar59, 8
  %62 = or i64 %61, 168
  %scevgep75.21 = getelementptr i8, i8* %call.i39, i64 %62
  %scevgep7576.21 = bitcast i8* %scevgep75.21 to double*
  %_p_scalar_77.21 = load double, double* %scevgep7576.21, align 8, !alias.scope !13, !noalias !15
  %63 = shl i64 %polly.indvar59, 8
  %64 = or i64 %63, 176
  %scevgep75.22 = getelementptr i8, i8* %call.i39, i64 %64
  %scevgep7576.22 = bitcast i8* %scevgep75.22 to double*
  %_p_scalar_77.22 = load double, double* %scevgep7576.22, align 8, !alias.scope !13, !noalias !15
  %65 = shl i64 %polly.indvar59, 8
  %66 = or i64 %65, 184
  %scevgep75.23 = getelementptr i8, i8* %call.i39, i64 %66
  %scevgep7576.23 = bitcast i8* %scevgep75.23 to double*
  %_p_scalar_77.23 = load double, double* %scevgep7576.23, align 8, !alias.scope !13, !noalias !15
  %67 = shl i64 %polly.indvar59, 8
  %68 = or i64 %67, 192
  %scevgep75.24 = getelementptr i8, i8* %call.i39, i64 %68
  %scevgep7576.24 = bitcast i8* %scevgep75.24 to double*
  %_p_scalar_77.24 = load double, double* %scevgep7576.24, align 8, !alias.scope !13, !noalias !15
  %69 = shl i64 %polly.indvar59, 8
  %70 = or i64 %69, 200
  %scevgep75.25 = getelementptr i8, i8* %call.i39, i64 %70
  %scevgep7576.25 = bitcast i8* %scevgep75.25 to double*
  %_p_scalar_77.25 = load double, double* %scevgep7576.25, align 8, !alias.scope !13, !noalias !15
  %71 = shl i64 %polly.indvar59, 8
  %72 = or i64 %71, 208
  %scevgep75.26 = getelementptr i8, i8* %call.i39, i64 %72
  %scevgep7576.26 = bitcast i8* %scevgep75.26 to double*
  %_p_scalar_77.26 = load double, double* %scevgep7576.26, align 8, !alias.scope !13, !noalias !15
  %73 = shl i64 %polly.indvar59, 8
  %74 = or i64 %73, 216
  %scevgep75.27 = getelementptr i8, i8* %call.i39, i64 %74
  %scevgep7576.27 = bitcast i8* %scevgep75.27 to double*
  %_p_scalar_77.27 = load double, double* %scevgep7576.27, align 8, !alias.scope !13, !noalias !15
  %75 = shl i64 %polly.indvar59, 8
  %76 = or i64 %75, 224
  %scevgep75.28 = getelementptr i8, i8* %call.i39, i64 %76
  %scevgep7576.28 = bitcast i8* %scevgep75.28 to double*
  %_p_scalar_77.28 = load double, double* %scevgep7576.28, align 8, !alias.scope !13, !noalias !15
  %77 = shl i64 %polly.indvar59, 8
  %78 = or i64 %77, 232
  %scevgep75.29 = getelementptr i8, i8* %call.i39, i64 %78
  %scevgep7576.29 = bitcast i8* %scevgep75.29 to double*
  %_p_scalar_77.29 = load double, double* %scevgep7576.29, align 8, !alias.scope !13, !noalias !15
  %79 = shl i64 %polly.indvar59, 8
  %80 = or i64 %79, 240
  %scevgep75.30 = getelementptr i8, i8* %call.i39, i64 %80
  %scevgep7576.30 = bitcast i8* %scevgep75.30 to double*
  %_p_scalar_77.30 = load double, double* %scevgep7576.30, align 8, !alias.scope !13, !noalias !15
  %81 = or i64 %19, 248
  %scevgep75.31 = getelementptr i8, i8* %call.i39, i64 %81
  %scevgep7576.31 = bitcast i8* %scevgep75.31 to double*
  %_p_scalar_77.31 = load double, double* %scevgep7576.31, align 8, !alias.scope !13, !noalias !15
  br label %polly.loop_preheader69

polly.loop_preheader69:                           ; preds = %polly.loop_preheader63, %polly.loop_preheader69
  %polly.indvar65 = phi i64 [ 0, %polly.loop_preheader63 ], [ %polly.indvar_next66, %polly.loop_preheader69 ]
  %82 = add nuw nsw i64 %polly.indvar65, %18
  %polly.access.call.i37 = getelementptr double, double* %arraydecay, i64 %82
  %83 = mul nuw nsw i64 %82, 32000
  %polly.access.call.i37.promoted = load double, double* %polly.access.call.i37, align 8, !alias.scope !20, !noalias !21
  %84 = add nuw nsw i64 %20, %83
  %scevgep = getelementptr i8, i8* %call.i, i64 %84
  %scevgep74 = bitcast i8* %scevgep to double*
  %_p_scalar_ = load double, double* %scevgep74, align 8, !alias.scope !17, !noalias !22
  %p_mul.i = fmul double %_p_scalar_, %_p_scalar_77
  %p_add.i44 = fadd double %polly.access.call.i37.promoted, %p_mul.i
  %85 = add nuw nsw i64 %22, %83
  %scevgep.1 = getelementptr i8, i8* %call.i, i64 %85
  %scevgep74.1 = bitcast i8* %scevgep.1 to double*
  %_p_scalar_.1 = load double, double* %scevgep74.1, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.1 = fmul double %_p_scalar_.1, %_p_scalar_77.1
  %p_add.i44.1 = fadd double %p_add.i44, %p_mul.i.1
  %86 = add nuw nsw i64 %24, %83
  %scevgep.2 = getelementptr i8, i8* %call.i, i64 %86
  %scevgep74.2 = bitcast i8* %scevgep.2 to double*
  %_p_scalar_.2 = load double, double* %scevgep74.2, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.2 = fmul double %_p_scalar_.2, %_p_scalar_77.2
  %p_add.i44.2 = fadd double %p_add.i44.1, %p_mul.i.2
  %87 = add nuw nsw i64 %26, %83
  %scevgep.3 = getelementptr i8, i8* %call.i, i64 %87
  %scevgep74.3 = bitcast i8* %scevgep.3 to double*
  %_p_scalar_.3 = load double, double* %scevgep74.3, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.3 = fmul double %_p_scalar_.3, %_p_scalar_77.3
  %p_add.i44.3 = fadd double %p_add.i44.2, %p_mul.i.3
  %88 = add nuw nsw i64 %28, %83
  %scevgep.4 = getelementptr i8, i8* %call.i, i64 %88
  %scevgep74.4 = bitcast i8* %scevgep.4 to double*
  %_p_scalar_.4 = load double, double* %scevgep74.4, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.4 = fmul double %_p_scalar_.4, %_p_scalar_77.4
  %p_add.i44.4 = fadd double %p_add.i44.3, %p_mul.i.4
  %89 = add nuw nsw i64 %30, %83
  %scevgep.5 = getelementptr i8, i8* %call.i, i64 %89
  %scevgep74.5 = bitcast i8* %scevgep.5 to double*
  %_p_scalar_.5 = load double, double* %scevgep74.5, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.5 = fmul double %_p_scalar_.5, %_p_scalar_77.5
  %p_add.i44.5 = fadd double %p_add.i44.4, %p_mul.i.5
  %90 = add nuw nsw i64 %32, %83
  %scevgep.6 = getelementptr i8, i8* %call.i, i64 %90
  %scevgep74.6 = bitcast i8* %scevgep.6 to double*
  %_p_scalar_.6 = load double, double* %scevgep74.6, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.6 = fmul double %_p_scalar_.6, %_p_scalar_77.6
  %p_add.i44.6 = fadd double %p_add.i44.5, %p_mul.i.6
  %91 = add nuw nsw i64 %34, %83
  %scevgep.7 = getelementptr i8, i8* %call.i, i64 %91
  %scevgep74.7 = bitcast i8* %scevgep.7 to double*
  %_p_scalar_.7 = load double, double* %scevgep74.7, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.7 = fmul double %_p_scalar_.7, %_p_scalar_77.7
  %p_add.i44.7 = fadd double %p_add.i44.6, %p_mul.i.7
  %92 = add nuw nsw i64 %36, %83
  %scevgep.8 = getelementptr i8, i8* %call.i, i64 %92
  %scevgep74.8 = bitcast i8* %scevgep.8 to double*
  %_p_scalar_.8 = load double, double* %scevgep74.8, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.8 = fmul double %_p_scalar_.8, %_p_scalar_77.8
  %p_add.i44.8 = fadd double %p_add.i44.7, %p_mul.i.8
  %93 = add nuw nsw i64 %38, %83
  %scevgep.9 = getelementptr i8, i8* %call.i, i64 %93
  %scevgep74.9 = bitcast i8* %scevgep.9 to double*
  %_p_scalar_.9 = load double, double* %scevgep74.9, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.9 = fmul double %_p_scalar_.9, %_p_scalar_77.9
  %p_add.i44.9 = fadd double %p_add.i44.8, %p_mul.i.9
  %94 = add nuw nsw i64 %40, %83
  %scevgep.10 = getelementptr i8, i8* %call.i, i64 %94
  %scevgep74.10 = bitcast i8* %scevgep.10 to double*
  %_p_scalar_.10 = load double, double* %scevgep74.10, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.10 = fmul double %_p_scalar_.10, %_p_scalar_77.10
  %p_add.i44.10 = fadd double %p_add.i44.9, %p_mul.i.10
  %95 = add nuw nsw i64 %42, %83
  %scevgep.11 = getelementptr i8, i8* %call.i, i64 %95
  %scevgep74.11 = bitcast i8* %scevgep.11 to double*
  %_p_scalar_.11 = load double, double* %scevgep74.11, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.11 = fmul double %_p_scalar_.11, %_p_scalar_77.11
  %p_add.i44.11 = fadd double %p_add.i44.10, %p_mul.i.11
  %96 = add nuw nsw i64 %44, %83
  %scevgep.12 = getelementptr i8, i8* %call.i, i64 %96
  %scevgep74.12 = bitcast i8* %scevgep.12 to double*
  %_p_scalar_.12 = load double, double* %scevgep74.12, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.12 = fmul double %_p_scalar_.12, %_p_scalar_77.12
  %p_add.i44.12 = fadd double %p_add.i44.11, %p_mul.i.12
  %97 = add nuw nsw i64 %46, %83
  %scevgep.13 = getelementptr i8, i8* %call.i, i64 %97
  %scevgep74.13 = bitcast i8* %scevgep.13 to double*
  %_p_scalar_.13 = load double, double* %scevgep74.13, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.13 = fmul double %_p_scalar_.13, %_p_scalar_77.13
  %p_add.i44.13 = fadd double %p_add.i44.12, %p_mul.i.13
  %98 = add nuw nsw i64 %48, %83
  %scevgep.14 = getelementptr i8, i8* %call.i, i64 %98
  %scevgep74.14 = bitcast i8* %scevgep.14 to double*
  %_p_scalar_.14 = load double, double* %scevgep74.14, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.14 = fmul double %_p_scalar_.14, %_p_scalar_77.14
  %p_add.i44.14 = fadd double %p_add.i44.13, %p_mul.i.14
  %99 = add nuw nsw i64 %50, %83
  %scevgep.15 = getelementptr i8, i8* %call.i, i64 %99
  %scevgep74.15 = bitcast i8* %scevgep.15 to double*
  %_p_scalar_.15 = load double, double* %scevgep74.15, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.15 = fmul double %_p_scalar_.15, %_p_scalar_77.15
  %p_add.i44.15 = fadd double %p_add.i44.14, %p_mul.i.15
  %100 = add nuw nsw i64 %52, %83
  %scevgep.16 = getelementptr i8, i8* %call.i, i64 %100
  %scevgep74.16 = bitcast i8* %scevgep.16 to double*
  %_p_scalar_.16 = load double, double* %scevgep74.16, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.16 = fmul double %_p_scalar_.16, %_p_scalar_77.16
  %p_add.i44.16 = fadd double %p_add.i44.15, %p_mul.i.16
  %101 = add nuw nsw i64 %54, %83
  %scevgep.17 = getelementptr i8, i8* %call.i, i64 %101
  %scevgep74.17 = bitcast i8* %scevgep.17 to double*
  %_p_scalar_.17 = load double, double* %scevgep74.17, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.17 = fmul double %_p_scalar_.17, %_p_scalar_77.17
  %p_add.i44.17 = fadd double %p_add.i44.16, %p_mul.i.17
  %102 = add nuw nsw i64 %56, %83
  %scevgep.18 = getelementptr i8, i8* %call.i, i64 %102
  %scevgep74.18 = bitcast i8* %scevgep.18 to double*
  %_p_scalar_.18 = load double, double* %scevgep74.18, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.18 = fmul double %_p_scalar_.18, %_p_scalar_77.18
  %p_add.i44.18 = fadd double %p_add.i44.17, %p_mul.i.18
  %103 = add nuw nsw i64 %58, %83
  %scevgep.19 = getelementptr i8, i8* %call.i, i64 %103
  %scevgep74.19 = bitcast i8* %scevgep.19 to double*
  %_p_scalar_.19 = load double, double* %scevgep74.19, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.19 = fmul double %_p_scalar_.19, %_p_scalar_77.19
  %p_add.i44.19 = fadd double %p_add.i44.18, %p_mul.i.19
  %104 = add nuw nsw i64 %60, %83
  %scevgep.20 = getelementptr i8, i8* %call.i, i64 %104
  %scevgep74.20 = bitcast i8* %scevgep.20 to double*
  %_p_scalar_.20 = load double, double* %scevgep74.20, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.20 = fmul double %_p_scalar_.20, %_p_scalar_77.20
  %p_add.i44.20 = fadd double %p_add.i44.19, %p_mul.i.20
  %105 = add nuw nsw i64 %62, %83
  %scevgep.21 = getelementptr i8, i8* %call.i, i64 %105
  %scevgep74.21 = bitcast i8* %scevgep.21 to double*
  %_p_scalar_.21 = load double, double* %scevgep74.21, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.21 = fmul double %_p_scalar_.21, %_p_scalar_77.21
  %p_add.i44.21 = fadd double %p_add.i44.20, %p_mul.i.21
  %106 = add nuw nsw i64 %64, %83
  %scevgep.22 = getelementptr i8, i8* %call.i, i64 %106
  %scevgep74.22 = bitcast i8* %scevgep.22 to double*
  %_p_scalar_.22 = load double, double* %scevgep74.22, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.22 = fmul double %_p_scalar_.22, %_p_scalar_77.22
  %p_add.i44.22 = fadd double %p_add.i44.21, %p_mul.i.22
  %107 = add nuw nsw i64 %66, %83
  %scevgep.23 = getelementptr i8, i8* %call.i, i64 %107
  %scevgep74.23 = bitcast i8* %scevgep.23 to double*
  %_p_scalar_.23 = load double, double* %scevgep74.23, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.23 = fmul double %_p_scalar_.23, %_p_scalar_77.23
  %p_add.i44.23 = fadd double %p_add.i44.22, %p_mul.i.23
  %108 = add nuw nsw i64 %68, %83
  %scevgep.24 = getelementptr i8, i8* %call.i, i64 %108
  %scevgep74.24 = bitcast i8* %scevgep.24 to double*
  %_p_scalar_.24 = load double, double* %scevgep74.24, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.24 = fmul double %_p_scalar_.24, %_p_scalar_77.24
  %p_add.i44.24 = fadd double %p_add.i44.23, %p_mul.i.24
  %109 = add nuw nsw i64 %70, %83
  %scevgep.25 = getelementptr i8, i8* %call.i, i64 %109
  %scevgep74.25 = bitcast i8* %scevgep.25 to double*
  %_p_scalar_.25 = load double, double* %scevgep74.25, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.25 = fmul double %_p_scalar_.25, %_p_scalar_77.25
  %p_add.i44.25 = fadd double %p_add.i44.24, %p_mul.i.25
  %110 = add nuw nsw i64 %72, %83
  %scevgep.26 = getelementptr i8, i8* %call.i, i64 %110
  %scevgep74.26 = bitcast i8* %scevgep.26 to double*
  %_p_scalar_.26 = load double, double* %scevgep74.26, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.26 = fmul double %_p_scalar_.26, %_p_scalar_77.26
  %p_add.i44.26 = fadd double %p_add.i44.25, %p_mul.i.26
  %111 = add nuw nsw i64 %74, %83
  %scevgep.27 = getelementptr i8, i8* %call.i, i64 %111
  %scevgep74.27 = bitcast i8* %scevgep.27 to double*
  %_p_scalar_.27 = load double, double* %scevgep74.27, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.27 = fmul double %_p_scalar_.27, %_p_scalar_77.27
  %p_add.i44.27 = fadd double %p_add.i44.26, %p_mul.i.27
  %112 = add nuw nsw i64 %76, %83
  %scevgep.28 = getelementptr i8, i8* %call.i, i64 %112
  %scevgep74.28 = bitcast i8* %scevgep.28 to double*
  %_p_scalar_.28 = load double, double* %scevgep74.28, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.28 = fmul double %_p_scalar_.28, %_p_scalar_77.28
  %p_add.i44.28 = fadd double %p_add.i44.27, %p_mul.i.28
  %113 = add nuw nsw i64 %78, %83
  %scevgep.29 = getelementptr i8, i8* %call.i, i64 %113
  %scevgep74.29 = bitcast i8* %scevgep.29 to double*
  %_p_scalar_.29 = load double, double* %scevgep74.29, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.29 = fmul double %_p_scalar_.29, %_p_scalar_77.29
  %p_add.i44.29 = fadd double %p_add.i44.28, %p_mul.i.29
  %114 = add nuw nsw i64 %80, %83
  %scevgep.30 = getelementptr i8, i8* %call.i, i64 %114
  %scevgep74.30 = bitcast i8* %scevgep.30 to double*
  %_p_scalar_.30 = load double, double* %scevgep74.30, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.30 = fmul double %_p_scalar_.30, %_p_scalar_77.30
  %p_add.i44.30 = fadd double %p_add.i44.29, %p_mul.i.30
  %115 = add nuw nsw i64 %81, %83
  %scevgep.31 = getelementptr i8, i8* %call.i, i64 %115
  %scevgep74.31 = bitcast i8* %scevgep.31 to double*
  %_p_scalar_.31 = load double, double* %scevgep74.31, align 8, !alias.scope !17, !noalias !22
  %p_mul.i.31 = fmul double %_p_scalar_.31, %_p_scalar_77.31
  %p_add.i44.31 = fadd double %p_add.i44.30, %p_mul.i.31
  store double %p_add.i44.31, double* %polly.access.call.i37, align 8, !alias.scope !20, !noalias !21
  %polly.indvar_next66 = add nuw nsw i64 %polly.indvar65, 1
  %exitcond.not = icmp eq i64 %polly.indvar_next66, 32
  br i1 %exitcond.not, label %polly.loop_exit64, label %polly.loop_preheader69

polly.loop_exit88:                                ; preds = %middle.block
  %polly.indvar_next84 = add nuw nsw i64 %polly.indvar83, 1
  %exitcond119.not = icmp eq i64 %polly.indvar_next84, 125
  br i1 %exitcond119.not, label %kernel_mvt.exit, label %polly.loop_preheader87

polly.loop_preheader87:                           ; preds = %polly.loop_exit58, %polly.loop_exit88
  %polly.indvar83 = phi i64 [ %polly.indvar_next84, %polly.loop_exit88 ], [ 0, %polly.loop_exit58 ]
  %116 = shl nsw i64 %polly.indvar83, 5
  br label %polly.loop_preheader93

polly.loop_preheader93:                           ; preds = %polly.loop_preheader87, %middle.block
  %polly.indvar89 = phi i64 [ 0, %polly.loop_preheader87 ], [ %polly.indvar_next90, %middle.block ]
  %117 = shl nsw i64 %polly.indvar89, 5
  %118 = mul nsw i64 %polly.indvar89, 1024000
  %119 = or i64 %117, 1
  %120 = mul nuw nsw i64 %119, 32000
  %121 = or i64 %117, 2
  %122 = mul nuw nsw i64 %121, 32000
  %123 = or i64 %117, 3
  %124 = mul nuw nsw i64 %123, 32000
  %125 = or i64 %117, 4
  %126 = mul nuw nsw i64 %125, 32000
  %127 = or i64 %117, 5
  %128 = mul nuw nsw i64 %127, 32000
  %129 = or i64 %117, 6
  %130 = mul nuw nsw i64 %129, 32000
  %131 = or i64 %117, 7
  %132 = mul nuw nsw i64 %131, 32000
  %133 = or i64 %117, 8
  %134 = mul nuw nsw i64 %133, 32000
  %135 = or i64 %117, 9
  %136 = mul nuw nsw i64 %135, 32000
  %137 = or i64 %117, 10
  %138 = mul nuw nsw i64 %137, 32000
  %139 = or i64 %117, 11
  %140 = mul nuw nsw i64 %139, 32000
  %141 = or i64 %117, 12
  %142 = mul nuw nsw i64 %141, 32000
  %143 = or i64 %117, 13
  %144 = mul nuw nsw i64 %143, 32000
  %145 = or i64 %117, 14
  %146 = mul nuw nsw i64 %145, 32000
  %147 = or i64 %117, 15
  %148 = mul nuw nsw i64 %147, 32000
  %149 = or i64 %117, 16
  %150 = mul nuw nsw i64 %149, 32000
  %151 = or i64 %117, 17
  %152 = mul nuw nsw i64 %151, 32000
  %153 = or i64 %117, 18
  %154 = mul nuw nsw i64 %153, 32000
  %155 = or i64 %117, 19
  %156 = mul nuw nsw i64 %155, 32000
  %157 = or i64 %117, 20
  %158 = mul nuw nsw i64 %157, 32000
  %159 = or i64 %117, 21
  %160 = mul nuw nsw i64 %159, 32000
  %161 = or i64 %117, 22
  %162 = mul nuw nsw i64 %161, 32000
  %163 = or i64 %117, 23
  %164 = mul nuw nsw i64 %163, 32000
  %165 = or i64 %117, 24
  %166 = mul nuw nsw i64 %165, 32000
  %167 = or i64 %117, 25
  %168 = mul nuw nsw i64 %167, 32000
  %169 = or i64 %117, 26
  %170 = mul nuw nsw i64 %169, 32000
  %171 = or i64 %117, 27
  %172 = mul nuw nsw i64 %171, 32000
  %173 = or i64 %117, 28
  %174 = mul nuw nsw i64 %173, 32000
  %175 = or i64 %117, 29
  %176 = mul nuw nsw i64 %175, 32000
  %177 = or i64 %117, 30
  %178 = mul nuw nsw i64 %177, 32000
  %179 = or i64 %117, 31
  %180 = mul nuw nsw i64 %179, 32000
  %181 = shl i64 %179, 3
  %scevgep107.31 = getelementptr i8, i8* %call.i40, i64 %181
  %scevgep107108.31 = bitcast i8* %scevgep107.31 to double*
  %_p_scalar_109.31 = load double, double* %scevgep107108.31, align 8, !alias.scope !19, !noalias !23
  %182 = shl i64 %177, 3
  %scevgep107.30 = getelementptr i8, i8* %call.i40, i64 %182
  %scevgep107108.30 = bitcast i8* %scevgep107.30 to double*
  %_p_scalar_109.30 = load double, double* %scevgep107108.30, align 8, !alias.scope !19, !noalias !23
  %183 = shl i64 %175, 3
  %scevgep107.29 = getelementptr i8, i8* %call.i40, i64 %183
  %scevgep107108.29 = bitcast i8* %scevgep107.29 to double*
  %_p_scalar_109.29 = load double, double* %scevgep107108.29, align 8, !alias.scope !19, !noalias !23
  %184 = shl i64 %173, 3
  %scevgep107.28 = getelementptr i8, i8* %call.i40, i64 %184
  %scevgep107108.28 = bitcast i8* %scevgep107.28 to double*
  %_p_scalar_109.28 = load double, double* %scevgep107108.28, align 8, !alias.scope !19, !noalias !23
  %185 = shl i64 %171, 3
  %scevgep107.27 = getelementptr i8, i8* %call.i40, i64 %185
  %scevgep107108.27 = bitcast i8* %scevgep107.27 to double*
  %_p_scalar_109.27 = load double, double* %scevgep107108.27, align 8, !alias.scope !19, !noalias !23
  %186 = shl i64 %169, 3
  %scevgep107.26 = getelementptr i8, i8* %call.i40, i64 %186
  %scevgep107108.26 = bitcast i8* %scevgep107.26 to double*
  %_p_scalar_109.26 = load double, double* %scevgep107108.26, align 8, !alias.scope !19, !noalias !23
  %187 = shl i64 %167, 3
  %scevgep107.25 = getelementptr i8, i8* %call.i40, i64 %187
  %scevgep107108.25 = bitcast i8* %scevgep107.25 to double*
  %_p_scalar_109.25 = load double, double* %scevgep107108.25, align 8, !alias.scope !19, !noalias !23
  %188 = shl i64 %165, 3
  %scevgep107.24 = getelementptr i8, i8* %call.i40, i64 %188
  %scevgep107108.24 = bitcast i8* %scevgep107.24 to double*
  %_p_scalar_109.24 = load double, double* %scevgep107108.24, align 8, !alias.scope !19, !noalias !23
  %189 = shl i64 %163, 3
  %scevgep107.23 = getelementptr i8, i8* %call.i40, i64 %189
  %scevgep107108.23 = bitcast i8* %scevgep107.23 to double*
  %_p_scalar_109.23 = load double, double* %scevgep107108.23, align 8, !alias.scope !19, !noalias !23
  %190 = shl i64 %161, 3
  %scevgep107.22 = getelementptr i8, i8* %call.i40, i64 %190
  %scevgep107108.22 = bitcast i8* %scevgep107.22 to double*
  %_p_scalar_109.22 = load double, double* %scevgep107108.22, align 8, !alias.scope !19, !noalias !23
  %191 = shl i64 %159, 3
  %scevgep107.21 = getelementptr i8, i8* %call.i40, i64 %191
  %scevgep107108.21 = bitcast i8* %scevgep107.21 to double*
  %_p_scalar_109.21 = load double, double* %scevgep107108.21, align 8, !alias.scope !19, !noalias !23
  %192 = shl i64 %157, 3
  %scevgep107.20 = getelementptr i8, i8* %call.i40, i64 %192
  %scevgep107108.20 = bitcast i8* %scevgep107.20 to double*
  %_p_scalar_109.20 = load double, double* %scevgep107108.20, align 8, !alias.scope !19, !noalias !23
  %193 = shl i64 %155, 3
  %scevgep107.19 = getelementptr i8, i8* %call.i40, i64 %193
  %scevgep107108.19 = bitcast i8* %scevgep107.19 to double*
  %_p_scalar_109.19 = load double, double* %scevgep107108.19, align 8, !alias.scope !19, !noalias !23
  %194 = shl i64 %153, 3
  %scevgep107.18 = getelementptr i8, i8* %call.i40, i64 %194
  %scevgep107108.18 = bitcast i8* %scevgep107.18 to double*
  %_p_scalar_109.18 = load double, double* %scevgep107108.18, align 8, !alias.scope !19, !noalias !23
  %195 = shl i64 %151, 3
  %scevgep107.17 = getelementptr i8, i8* %call.i40, i64 %195
  %scevgep107108.17 = bitcast i8* %scevgep107.17 to double*
  %_p_scalar_109.17 = load double, double* %scevgep107108.17, align 8, !alias.scope !19, !noalias !23
  %196 = shl i64 %149, 3
  %scevgep107.16 = getelementptr i8, i8* %call.i40, i64 %196
  %scevgep107108.16 = bitcast i8* %scevgep107.16 to double*
  %_p_scalar_109.16 = load double, double* %scevgep107108.16, align 8, !alias.scope !19, !noalias !23
  %197 = shl i64 %147, 3
  %scevgep107.15 = getelementptr i8, i8* %call.i40, i64 %197
  %scevgep107108.15 = bitcast i8* %scevgep107.15 to double*
  %_p_scalar_109.15 = load double, double* %scevgep107108.15, align 8, !alias.scope !19, !noalias !23
  %198 = shl i64 %145, 3
  %scevgep107.14 = getelementptr i8, i8* %call.i40, i64 %198
  %scevgep107108.14 = bitcast i8* %scevgep107.14 to double*
  %_p_scalar_109.14 = load double, double* %scevgep107108.14, align 8, !alias.scope !19, !noalias !23
  %199 = shl i64 %143, 3
  %scevgep107.13 = getelementptr i8, i8* %call.i40, i64 %199
  %scevgep107108.13 = bitcast i8* %scevgep107.13 to double*
  %_p_scalar_109.13 = load double, double* %scevgep107108.13, align 8, !alias.scope !19, !noalias !23
  %200 = shl i64 %141, 3
  %scevgep107.12 = getelementptr i8, i8* %call.i40, i64 %200
  %scevgep107108.12 = bitcast i8* %scevgep107.12 to double*
  %_p_scalar_109.12 = load double, double* %scevgep107108.12, align 8, !alias.scope !19, !noalias !23
  %201 = shl i64 %139, 3
  %scevgep107.11 = getelementptr i8, i8* %call.i40, i64 %201
  %scevgep107108.11 = bitcast i8* %scevgep107.11 to double*
  %_p_scalar_109.11 = load double, double* %scevgep107108.11, align 8, !alias.scope !19, !noalias !23
  %202 = shl i64 %137, 3
  %scevgep107.10 = getelementptr i8, i8* %call.i40, i64 %202
  %scevgep107108.10 = bitcast i8* %scevgep107.10 to double*
  %_p_scalar_109.10 = load double, double* %scevgep107108.10, align 8, !alias.scope !19, !noalias !23
  %203 = shl i64 %135, 3
  %scevgep107.9 = getelementptr i8, i8* %call.i40, i64 %203
  %scevgep107108.9 = bitcast i8* %scevgep107.9 to double*
  %_p_scalar_109.9 = load double, double* %scevgep107108.9, align 8, !alias.scope !19, !noalias !23
  %204 = shl i64 %133, 3
  %scevgep107.8 = getelementptr i8, i8* %call.i40, i64 %204
  %scevgep107108.8 = bitcast i8* %scevgep107.8 to double*
  %_p_scalar_109.8 = load double, double* %scevgep107108.8, align 8, !alias.scope !19, !noalias !23
  %205 = shl i64 %131, 3
  %scevgep107.7 = getelementptr i8, i8* %call.i40, i64 %205
  %scevgep107108.7 = bitcast i8* %scevgep107.7 to double*
  %_p_scalar_109.7 = load double, double* %scevgep107108.7, align 8, !alias.scope !19, !noalias !23
  %206 = shl i64 %129, 3
  %scevgep107.6 = getelementptr i8, i8* %call.i40, i64 %206
  %scevgep107108.6 = bitcast i8* %scevgep107.6 to double*
  %_p_scalar_109.6 = load double, double* %scevgep107108.6, align 8, !alias.scope !19, !noalias !23
  %207 = shl i64 %127, 3
  %scevgep107.5 = getelementptr i8, i8* %call.i40, i64 %207
  %scevgep107108.5 = bitcast i8* %scevgep107.5 to double*
  %_p_scalar_109.5 = load double, double* %scevgep107108.5, align 8, !alias.scope !19, !noalias !23
  %208 = shl i64 %125, 3
  %scevgep107.4 = getelementptr i8, i8* %call.i40, i64 %208
  %scevgep107108.4 = bitcast i8* %scevgep107.4 to double*
  %_p_scalar_109.4 = load double, double* %scevgep107108.4, align 8, !alias.scope !19, !noalias !23
  %209 = shl i64 %123, 3
  %scevgep107.3 = getelementptr i8, i8* %call.i40, i64 %209
  %scevgep107108.3 = bitcast i8* %scevgep107.3 to double*
  %_p_scalar_109.3 = load double, double* %scevgep107108.3, align 8, !alias.scope !19, !noalias !23
  %210 = shl i64 %121, 3
  %scevgep107.2 = getelementptr i8, i8* %call.i40, i64 %210
  %scevgep107108.2 = bitcast i8* %scevgep107.2 to double*
  %_p_scalar_109.2 = load double, double* %scevgep107108.2, align 8, !alias.scope !19, !noalias !23
  %211 = shl i64 %119, 3
  %scevgep107.1 = getelementptr i8, i8* %call.i40, i64 %211
  %scevgep107108.1 = bitcast i8* %scevgep107.1 to double*
  %_p_scalar_109.1 = load double, double* %scevgep107108.1, align 8, !alias.scope !19, !noalias !23
  %212 = shl i64 %polly.indvar89, 8
  %scevgep107 = getelementptr i8, i8* %call.i40, i64 %212
  %scevgep107108 = bitcast i8* %scevgep107 to double*
  %_p_scalar_109 = load double, double* %scevgep107108, align 8, !alias.scope !19, !noalias !23
  %broadcast.splatinsert = insertelement <2 x double> poison, double %_p_scalar_109, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert122 = insertelement <2 x double> poison, double %_p_scalar_109.1, i32 0
  %broadcast.splat123 = shufflevector <2 x double> %broadcast.splatinsert122, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert125 = insertelement <2 x double> poison, double %_p_scalar_109.2, i32 0
  %broadcast.splat126 = shufflevector <2 x double> %broadcast.splatinsert125, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert128 = insertelement <2 x double> poison, double %_p_scalar_109.3, i32 0
  %broadcast.splat129 = shufflevector <2 x double> %broadcast.splatinsert128, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert131 = insertelement <2 x double> poison, double %_p_scalar_109.4, i32 0
  %broadcast.splat132 = shufflevector <2 x double> %broadcast.splatinsert131, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert134 = insertelement <2 x double> poison, double %_p_scalar_109.5, i32 0
  %broadcast.splat135 = shufflevector <2 x double> %broadcast.splatinsert134, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert137 = insertelement <2 x double> poison, double %_p_scalar_109.6, i32 0
  %broadcast.splat138 = shufflevector <2 x double> %broadcast.splatinsert137, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert140 = insertelement <2 x double> poison, double %_p_scalar_109.7, i32 0
  %broadcast.splat141 = shufflevector <2 x double> %broadcast.splatinsert140, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert143 = insertelement <2 x double> poison, double %_p_scalar_109.8, i32 0
  %broadcast.splat144 = shufflevector <2 x double> %broadcast.splatinsert143, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert146 = insertelement <2 x double> poison, double %_p_scalar_109.9, i32 0
  %broadcast.splat147 = shufflevector <2 x double> %broadcast.splatinsert146, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert149 = insertelement <2 x double> poison, double %_p_scalar_109.10, i32 0
  %broadcast.splat150 = shufflevector <2 x double> %broadcast.splatinsert149, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert152 = insertelement <2 x double> poison, double %_p_scalar_109.11, i32 0
  %broadcast.splat153 = shufflevector <2 x double> %broadcast.splatinsert152, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert155 = insertelement <2 x double> poison, double %_p_scalar_109.12, i32 0
  %broadcast.splat156 = shufflevector <2 x double> %broadcast.splatinsert155, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert158 = insertelement <2 x double> poison, double %_p_scalar_109.13, i32 0
  %broadcast.splat159 = shufflevector <2 x double> %broadcast.splatinsert158, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert161 = insertelement <2 x double> poison, double %_p_scalar_109.14, i32 0
  %broadcast.splat162 = shufflevector <2 x double> %broadcast.splatinsert161, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert164 = insertelement <2 x double> poison, double %_p_scalar_109.15, i32 0
  %broadcast.splat165 = shufflevector <2 x double> %broadcast.splatinsert164, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert167 = insertelement <2 x double> poison, double %_p_scalar_109.16, i32 0
  %broadcast.splat168 = shufflevector <2 x double> %broadcast.splatinsert167, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert170 = insertelement <2 x double> poison, double %_p_scalar_109.17, i32 0
  %broadcast.splat171 = shufflevector <2 x double> %broadcast.splatinsert170, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert173 = insertelement <2 x double> poison, double %_p_scalar_109.18, i32 0
  %broadcast.splat174 = shufflevector <2 x double> %broadcast.splatinsert173, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert176 = insertelement <2 x double> poison, double %_p_scalar_109.19, i32 0
  %broadcast.splat177 = shufflevector <2 x double> %broadcast.splatinsert176, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert179 = insertelement <2 x double> poison, double %_p_scalar_109.20, i32 0
  %broadcast.splat180 = shufflevector <2 x double> %broadcast.splatinsert179, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert182 = insertelement <2 x double> poison, double %_p_scalar_109.21, i32 0
  %broadcast.splat183 = shufflevector <2 x double> %broadcast.splatinsert182, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert185 = insertelement <2 x double> poison, double %_p_scalar_109.22, i32 0
  %broadcast.splat186 = shufflevector <2 x double> %broadcast.splatinsert185, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert188 = insertelement <2 x double> poison, double %_p_scalar_109.23, i32 0
  %broadcast.splat189 = shufflevector <2 x double> %broadcast.splatinsert188, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert191 = insertelement <2 x double> poison, double %_p_scalar_109.24, i32 0
  %broadcast.splat192 = shufflevector <2 x double> %broadcast.splatinsert191, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert194 = insertelement <2 x double> poison, double %_p_scalar_109.25, i32 0
  %broadcast.splat195 = shufflevector <2 x double> %broadcast.splatinsert194, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert197 = insertelement <2 x double> poison, double %_p_scalar_109.26, i32 0
  %broadcast.splat198 = shufflevector <2 x double> %broadcast.splatinsert197, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert200 = insertelement <2 x double> poison, double %_p_scalar_109.27, i32 0
  %broadcast.splat201 = shufflevector <2 x double> %broadcast.splatinsert200, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert203 = insertelement <2 x double> poison, double %_p_scalar_109.28, i32 0
  %broadcast.splat204 = shufflevector <2 x double> %broadcast.splatinsert203, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert206 = insertelement <2 x double> poison, double %_p_scalar_109.29, i32 0
  %broadcast.splat207 = shufflevector <2 x double> %broadcast.splatinsert206, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert209 = insertelement <2 x double> poison, double %_p_scalar_109.30, i32 0
  %broadcast.splat210 = shufflevector <2 x double> %broadcast.splatinsert209, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert212 = insertelement <2 x double> poison, double %_p_scalar_109.31, i32 0
  %broadcast.splat213 = shufflevector <2 x double> %broadcast.splatinsert212, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %polly.loop_preheader93
  %index = phi i64 [ 0, %polly.loop_preheader93 ], [ %index.next, %vector.body ]
  %213 = add nuw nsw i64 %index, %116
  %214 = getelementptr double, double* %arraydecay5, i64 %213
  %215 = shl i64 %213, 3
  %216 = bitcast double* %214 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %216, align 8, !alias.scope !24, !noalias !25
  %217 = add nuw nsw i64 %118, %215
  %218 = getelementptr i8, i8* %call.i, i64 %217
  %219 = bitcast i8* %218 to <2 x double>*
  %wide.load120 = load <2 x double>, <2 x double>* %219, align 8, !alias.scope !17, !noalias !22
  %220 = fmul <2 x double> %wide.load120, %broadcast.splat
  %221 = fadd <2 x double> %wide.load, %220
  %222 = add nuw nsw i64 %120, %215
  %223 = getelementptr i8, i8* %call.i, i64 %222
  %224 = bitcast i8* %223 to <2 x double>*
  %wide.load121 = load <2 x double>, <2 x double>* %224, align 8, !alias.scope !17, !noalias !22
  %225 = fmul <2 x double> %wide.load121, %broadcast.splat123
  %226 = fadd <2 x double> %221, %225
  %227 = add nuw nsw i64 %122, %215
  %228 = getelementptr i8, i8* %call.i, i64 %227
  %229 = bitcast i8* %228 to <2 x double>*
  %wide.load124 = load <2 x double>, <2 x double>* %229, align 8, !alias.scope !17, !noalias !22
  %230 = fmul <2 x double> %wide.load124, %broadcast.splat126
  %231 = fadd <2 x double> %226, %230
  %232 = add nuw nsw i64 %124, %215
  %233 = getelementptr i8, i8* %call.i, i64 %232
  %234 = bitcast i8* %233 to <2 x double>*
  %wide.load127 = load <2 x double>, <2 x double>* %234, align 8, !alias.scope !17, !noalias !22
  %235 = fmul <2 x double> %wide.load127, %broadcast.splat129
  %236 = fadd <2 x double> %231, %235
  %237 = add nuw nsw i64 %126, %215
  %238 = getelementptr i8, i8* %call.i, i64 %237
  %239 = bitcast i8* %238 to <2 x double>*
  %wide.load130 = load <2 x double>, <2 x double>* %239, align 8, !alias.scope !17, !noalias !22
  %240 = fmul <2 x double> %wide.load130, %broadcast.splat132
  %241 = fadd <2 x double> %236, %240
  %242 = add nuw nsw i64 %128, %215
  %243 = getelementptr i8, i8* %call.i, i64 %242
  %244 = bitcast i8* %243 to <2 x double>*
  %wide.load133 = load <2 x double>, <2 x double>* %244, align 8, !alias.scope !17, !noalias !22
  %245 = fmul <2 x double> %wide.load133, %broadcast.splat135
  %246 = fadd <2 x double> %241, %245
  %247 = add nuw nsw i64 %130, %215
  %248 = getelementptr i8, i8* %call.i, i64 %247
  %249 = bitcast i8* %248 to <2 x double>*
  %wide.load136 = load <2 x double>, <2 x double>* %249, align 8, !alias.scope !17, !noalias !22
  %250 = fmul <2 x double> %wide.load136, %broadcast.splat138
  %251 = fadd <2 x double> %246, %250
  %252 = add nuw nsw i64 %132, %215
  %253 = getelementptr i8, i8* %call.i, i64 %252
  %254 = bitcast i8* %253 to <2 x double>*
  %wide.load139 = load <2 x double>, <2 x double>* %254, align 8, !alias.scope !17, !noalias !22
  %255 = fmul <2 x double> %wide.load139, %broadcast.splat141
  %256 = fadd <2 x double> %251, %255
  %257 = add nuw nsw i64 %134, %215
  %258 = getelementptr i8, i8* %call.i, i64 %257
  %259 = bitcast i8* %258 to <2 x double>*
  %wide.load142 = load <2 x double>, <2 x double>* %259, align 8, !alias.scope !17, !noalias !22
  %260 = fmul <2 x double> %wide.load142, %broadcast.splat144
  %261 = fadd <2 x double> %256, %260
  %262 = add nuw nsw i64 %136, %215
  %263 = getelementptr i8, i8* %call.i, i64 %262
  %264 = bitcast i8* %263 to <2 x double>*
  %wide.load145 = load <2 x double>, <2 x double>* %264, align 8, !alias.scope !17, !noalias !22
  %265 = fmul <2 x double> %wide.load145, %broadcast.splat147
  %266 = fadd <2 x double> %261, %265
  %267 = add nuw nsw i64 %138, %215
  %268 = getelementptr i8, i8* %call.i, i64 %267
  %269 = bitcast i8* %268 to <2 x double>*
  %wide.load148 = load <2 x double>, <2 x double>* %269, align 8, !alias.scope !17, !noalias !22
  %270 = fmul <2 x double> %wide.load148, %broadcast.splat150
  %271 = fadd <2 x double> %266, %270
  %272 = add nuw nsw i64 %140, %215
  %273 = getelementptr i8, i8* %call.i, i64 %272
  %274 = bitcast i8* %273 to <2 x double>*
  %wide.load151 = load <2 x double>, <2 x double>* %274, align 8, !alias.scope !17, !noalias !22
  %275 = fmul <2 x double> %wide.load151, %broadcast.splat153
  %276 = fadd <2 x double> %271, %275
  %277 = add nuw nsw i64 %142, %215
  %278 = getelementptr i8, i8* %call.i, i64 %277
  %279 = bitcast i8* %278 to <2 x double>*
  %wide.load154 = load <2 x double>, <2 x double>* %279, align 8, !alias.scope !17, !noalias !22
  %280 = fmul <2 x double> %wide.load154, %broadcast.splat156
  %281 = fadd <2 x double> %276, %280
  %282 = add nuw nsw i64 %144, %215
  %283 = getelementptr i8, i8* %call.i, i64 %282
  %284 = bitcast i8* %283 to <2 x double>*
  %wide.load157 = load <2 x double>, <2 x double>* %284, align 8, !alias.scope !17, !noalias !22
  %285 = fmul <2 x double> %wide.load157, %broadcast.splat159
  %286 = fadd <2 x double> %281, %285
  %287 = add nuw nsw i64 %146, %215
  %288 = getelementptr i8, i8* %call.i, i64 %287
  %289 = bitcast i8* %288 to <2 x double>*
  %wide.load160 = load <2 x double>, <2 x double>* %289, align 8, !alias.scope !17, !noalias !22
  %290 = fmul <2 x double> %wide.load160, %broadcast.splat162
  %291 = fadd <2 x double> %286, %290
  %292 = add nuw nsw i64 %148, %215
  %293 = getelementptr i8, i8* %call.i, i64 %292
  %294 = bitcast i8* %293 to <2 x double>*
  %wide.load163 = load <2 x double>, <2 x double>* %294, align 8, !alias.scope !17, !noalias !22
  %295 = fmul <2 x double> %wide.load163, %broadcast.splat165
  %296 = fadd <2 x double> %291, %295
  %297 = add nuw nsw i64 %150, %215
  %298 = getelementptr i8, i8* %call.i, i64 %297
  %299 = bitcast i8* %298 to <2 x double>*
  %wide.load166 = load <2 x double>, <2 x double>* %299, align 8, !alias.scope !17, !noalias !22
  %300 = fmul <2 x double> %wide.load166, %broadcast.splat168
  %301 = fadd <2 x double> %296, %300
  %302 = add nuw nsw i64 %152, %215
  %303 = getelementptr i8, i8* %call.i, i64 %302
  %304 = bitcast i8* %303 to <2 x double>*
  %wide.load169 = load <2 x double>, <2 x double>* %304, align 8, !alias.scope !17, !noalias !22
  %305 = fmul <2 x double> %wide.load169, %broadcast.splat171
  %306 = fadd <2 x double> %301, %305
  %307 = add nuw nsw i64 %154, %215
  %308 = getelementptr i8, i8* %call.i, i64 %307
  %309 = bitcast i8* %308 to <2 x double>*
  %wide.load172 = load <2 x double>, <2 x double>* %309, align 8, !alias.scope !17, !noalias !22
  %310 = fmul <2 x double> %wide.load172, %broadcast.splat174
  %311 = fadd <2 x double> %306, %310
  %312 = add nuw nsw i64 %156, %215
  %313 = getelementptr i8, i8* %call.i, i64 %312
  %314 = bitcast i8* %313 to <2 x double>*
  %wide.load175 = load <2 x double>, <2 x double>* %314, align 8, !alias.scope !17, !noalias !22
  %315 = fmul <2 x double> %wide.load175, %broadcast.splat177
  %316 = fadd <2 x double> %311, %315
  %317 = add nuw nsw i64 %158, %215
  %318 = getelementptr i8, i8* %call.i, i64 %317
  %319 = bitcast i8* %318 to <2 x double>*
  %wide.load178 = load <2 x double>, <2 x double>* %319, align 8, !alias.scope !17, !noalias !22
  %320 = fmul <2 x double> %wide.load178, %broadcast.splat180
  %321 = fadd <2 x double> %316, %320
  %322 = add nuw nsw i64 %160, %215
  %323 = getelementptr i8, i8* %call.i, i64 %322
  %324 = bitcast i8* %323 to <2 x double>*
  %wide.load181 = load <2 x double>, <2 x double>* %324, align 8, !alias.scope !17, !noalias !22
  %325 = fmul <2 x double> %wide.load181, %broadcast.splat183
  %326 = fadd <2 x double> %321, %325
  %327 = add nuw nsw i64 %162, %215
  %328 = getelementptr i8, i8* %call.i, i64 %327
  %329 = bitcast i8* %328 to <2 x double>*
  %wide.load184 = load <2 x double>, <2 x double>* %329, align 8, !alias.scope !17, !noalias !22
  %330 = fmul <2 x double> %wide.load184, %broadcast.splat186
  %331 = fadd <2 x double> %326, %330
  %332 = add nuw nsw i64 %164, %215
  %333 = getelementptr i8, i8* %call.i, i64 %332
  %334 = bitcast i8* %333 to <2 x double>*
  %wide.load187 = load <2 x double>, <2 x double>* %334, align 8, !alias.scope !17, !noalias !22
  %335 = fmul <2 x double> %wide.load187, %broadcast.splat189
  %336 = fadd <2 x double> %331, %335
  %337 = add nuw nsw i64 %166, %215
  %338 = getelementptr i8, i8* %call.i, i64 %337
  %339 = bitcast i8* %338 to <2 x double>*
  %wide.load190 = load <2 x double>, <2 x double>* %339, align 8, !alias.scope !17, !noalias !22
  %340 = fmul <2 x double> %wide.load190, %broadcast.splat192
  %341 = fadd <2 x double> %336, %340
  %342 = add nuw nsw i64 %168, %215
  %343 = getelementptr i8, i8* %call.i, i64 %342
  %344 = bitcast i8* %343 to <2 x double>*
  %wide.load193 = load <2 x double>, <2 x double>* %344, align 8, !alias.scope !17, !noalias !22
  %345 = fmul <2 x double> %wide.load193, %broadcast.splat195
  %346 = fadd <2 x double> %341, %345
  %347 = add nuw nsw i64 %170, %215
  %348 = getelementptr i8, i8* %call.i, i64 %347
  %349 = bitcast i8* %348 to <2 x double>*
  %wide.load196 = load <2 x double>, <2 x double>* %349, align 8, !alias.scope !17, !noalias !22
  %350 = fmul <2 x double> %wide.load196, %broadcast.splat198
  %351 = fadd <2 x double> %346, %350
  %352 = add nuw nsw i64 %172, %215
  %353 = getelementptr i8, i8* %call.i, i64 %352
  %354 = bitcast i8* %353 to <2 x double>*
  %wide.load199 = load <2 x double>, <2 x double>* %354, align 8, !alias.scope !17, !noalias !22
  %355 = fmul <2 x double> %wide.load199, %broadcast.splat201
  %356 = fadd <2 x double> %351, %355
  %357 = add nuw nsw i64 %174, %215
  %358 = getelementptr i8, i8* %call.i, i64 %357
  %359 = bitcast i8* %358 to <2 x double>*
  %wide.load202 = load <2 x double>, <2 x double>* %359, align 8, !alias.scope !17, !noalias !22
  %360 = fmul <2 x double> %wide.load202, %broadcast.splat204
  %361 = fadd <2 x double> %356, %360
  %362 = add nuw nsw i64 %176, %215
  %363 = getelementptr i8, i8* %call.i, i64 %362
  %364 = bitcast i8* %363 to <2 x double>*
  %wide.load205 = load <2 x double>, <2 x double>* %364, align 8, !alias.scope !17, !noalias !22
  %365 = fmul <2 x double> %wide.load205, %broadcast.splat207
  %366 = fadd <2 x double> %361, %365
  %367 = add nuw nsw i64 %178, %215
  %368 = getelementptr i8, i8* %call.i, i64 %367
  %369 = bitcast i8* %368 to <2 x double>*
  %wide.load208 = load <2 x double>, <2 x double>* %369, align 8, !alias.scope !17, !noalias !22
  %370 = fmul <2 x double> %wide.load208, %broadcast.splat210
  %371 = fadd <2 x double> %366, %370
  %372 = add nuw nsw i64 %180, %215
  %373 = getelementptr i8, i8* %call.i, i64 %372
  %374 = bitcast i8* %373 to <2 x double>*
  %wide.load211 = load <2 x double>, <2 x double>* %374, align 8, !alias.scope !17, !noalias !22
  %375 = fmul <2 x double> %wide.load211, %broadcast.splat213
  %376 = fadd <2 x double> %371, %375
  %377 = bitcast double* %214 to <2 x double>*
  store <2 x double> %376, <2 x double>* %377, align 8, !alias.scope !24, !noalias !25
  %index.next = add i64 %index, 2
  %378 = icmp eq i64 %index.next, 32
  br i1 %378, label %middle.block, label %vector.body, !llvm.loop !26

middle.block:                                     ; preds = %vector.body
  %polly.indvar_next90 = add nuw nsw i64 %polly.indvar89, 1
  %exitcond118.not = icmp eq i64 %polly.indvar_next90, 125
  br i1 %exitcond118.not, label %polly.loop_exit88, label %polly.loop_preheader93
}

declare dso_local void @polybench_timer_start(...) local_unnamed_addr #1

declare dso_local void @polybench_timer_stop(...) local_unnamed_addr #1

declare dso_local void @polybench_timer_print(...) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare dso_local void @free(i8* nocapture noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly nofree nounwind willreturn
declare dso_local noalias noundef i8* @malloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fprintf(%struct._IO_FILE* nocapture noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #5

attributes #0 = { nounwind uwtable "frame-pointer"="none" "no-trapping-math"="true" "polly-optimized" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { inaccessiblemem_or_argmemonly nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { inaccessiblememonly nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind }
attributes #7 = { cold nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 13.0.0 (https://github.com/wsmoses/MLIR-GPU.git 19da7eee184e4d715d9870fe866ac10858e874d1)"}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.mustprogress"}
!4 = !{!5, !5, i64 0}
!5 = !{!"double", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !3}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !6, i64 0}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !14, !"polly.alias.scope.MemRef3"}
!14 = distinct !{!14, !"polly.alias.scope.domain"}
!15 = !{!16, !17, !18, !19}
!16 = distinct !{!16, !14, !"polly.alias.scope.MemRef0"}
!17 = distinct !{!17, !14, !"polly.alias.scope.MemRef2"}
!18 = distinct !{!18, !14, !"polly.alias.scope.MemRef5"}
!19 = distinct !{!19, !14, !"polly.alias.scope.MemRef7"}
!20 = !{!16}
!21 = !{!17, !13, !18, !19}
!22 = !{!16, !13, !18, !19}
!23 = !{!16, !17, !13, !18}
!24 = !{!18}
!25 = !{!16, !17, !13, !19}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
